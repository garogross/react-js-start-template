{"version":3,"file":"static/js/66.5fcce015.chunk.js","mappings":"8MACA,GAAgB,UAAY,6BAA6B,qBAAuB,wCAAwC,kBAAoB,qCAAqC,iBAAmB,oCAAoC,8BAAgC,iDAAiD,uBAAyB,0CAA0C,gBAAkB,mCAAmC,uBAAyB,0CAA0C,+BAAiC,kDAAkD,oBAAsB,uCAAuC,6BAA+B,iD,SCmCnqB,EA9BkB,SAAH,GAA+C,IAA1CA,EAAK,EAALA,MAAOC,EAAW,EAAXA,YAAaC,EAAK,EAALA,MACpC,GADmD,EAATC,WACEC,EAAAA,EAAAA,UAAS,KAAG,eAAjDC,EAAc,KAAEC,EAAiB,KAMxC,OACI,gBAAKC,UAAS,UAAKC,EAAAA,UAAmB,mBAAkB,UACpD,iBAAKD,UAAS,UAAKC,EAAAA,qBAA8B,YAAIA,EAAAA,6BAAwC,WACzF,iBAAKC,QAAS,kBARCC,EAQuBR,OAP7CG,EAAeM,SAASD,GAErBJ,GAAkB,SAAAM,GAAS,OAAKA,EAAUC,QAAO,SAAAC,GAAI,OAAIA,IAASJ,CAAE,GAAC,IADrEJ,GAAkB,SAAAM,GAAS,wBAAQA,GAAS,CAAEF,GAAE,KAF9B,IAACA,CAQ6B,EAAEH,UAAS,UAAKC,EAAAA,kBAA2B,YAAIH,EAAeM,SAAST,GAASM,EAAAA,yBAAqC,IAAK,WAClK,eAAID,UAAWC,EAAAA,iBAA2B,SAAER,KAC5C,iBACIO,UAAS,UAAKC,EAAAA,gBAAyB,YAAIH,EAAeM,SAAST,GAASM,EAAAA,uBAAmC,IAAK,WACpH,iBAAMD,UAAS,UAAKC,EAAAA,oBAA6B,YAAIA,EAAAA,mCACrD,iBAAMD,UAAS,UAAKC,EAAAA,oBAA6B,YAAIA,EAAAA,uCAI7D,SAACO,EAAA,EAAgB,CACbR,UAAWC,EAAAA,8BACXQ,OAAQX,EAAeM,SAAST,GAChCe,WAAU,UAAKT,EAAAA,uBAAgC,mBAAkB,SAEhEP,QAKrB,C,uDCCA,IAlCA,SAA0B,GAAoF,IAAnFe,EAAM,EAANA,OAAQE,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAAUZ,EAAS,EAATA,UAAWa,EAAK,EAALA,MAAMH,EAAU,EAAVA,WAAWI,EAAS,EAATA,UAAU,EAAD,EAAClB,UAAAA,OAAS,MAAG,EAAC,EACtG,GAA0CC,EAAAA,EAAAA,UAAS,GAAE,eAA9CkB,EAAa,KAAEC,EAAgB,KAChCC,GAAaC,EAAAA,EAAAA,QAAO,MAEpBC,EAAeR,GAAY,IAC3BS,EAAaP,GAAS,GAG5BQ,EAAAA,EAAAA,YAAU,WAIN,OAHAC,IACAC,OAAOC,iBAAiB,SAAUF,GAE3B,WACHC,OAAOE,oBAAoB,SAAUH,EACzC,CAEJ,GAAG,CAACb,IAEJ,IAAMa,EAAe,WAAH,eAASN,EAAkBP,IAAWK,GAAeL,IAA4B,QAAlB,EAAAQ,EAAWS,eAAO,aAAlB,EAAoBC,cAAeb,EAA+B,QAArB,EAAGG,EAAWS,eAAO,aAAlB,EAAoBC,aAAe,EAAE,EAGhKC,EAAe,CACjBC,OAAO,GAAD,OAAKd,EAAgBnB,EAAS,MACpCkC,WAAW,UAAD,OAAYX,EAAY,cAAMC,EAAU,OAEtD,OACI,gBAAKW,MAAOH,EAAc5B,UAAWA,GAAwB,GAAG,UAC5D,gBAAKgC,IAAKf,EAAYjB,UAAWU,GAA0B,GAAG,SACzDE,KAIjB,C","sources":["webpack://khg_tec_website/./src/components/layout/Accordion/Accordion.module.scss?a4be","components/layout/Accordion/Accordion.jsx","providers/DropdownProvider.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"accordion\":\"Accordion_accordion__VsZub\",\"accordion__container\":\"Accordion_accordion__container__Erp5J\",\"accordion__header\":\"Accordion_accordion__header__hDPsp\",\"accordion__title\":\"Accordion_accordion__title__tX0TV\",\"accordion__contentTextWrapper\":\"Accordion_accordion__contentTextWrapper__4Js8C\",\"accordion__contentText\":\"Accordion_accordion__contentText__F2OEJ\",\"accordion__icon\":\"Accordion_accordion__icon__-OVjT\",\"accordion__icon_active\":\"Accordion_accordion__icon_active__kjw4d\",\"accordion__iconItem_horizontal\":\"Accordion_accordion__iconItem_horizontal__Di9Yh\",\"accordion__iconItem\":\"Accordion_accordion__iconItem__BFoqi\",\"accordion__iconItem_vertical\":\"Accordion_accordion__iconItem_vertical__Zp87-\"};","import React, { useState} from \"react\";\n\nimport DropdownProvider from \"../../../providers/DropdownProvider\";\n\nimport styles from \"./Accordion.module.scss\";\n\nconst Accordion = ({title, contentText, index,addHeight}) => {\n    const [dropdownOpened, setDropdownOpened] = useState([])\n    const onToggleDropdowns = (id) => {\n        !dropdownOpened.includes(id) ?\n            setDropdownOpened(prevState => [...prevState, id]) :\n            setDropdownOpened(prevState => (prevState.filter(item => item !== id)))\n    }\n    return (\n        <div className={`${styles['accordion']} containerSmall`}>\n            <div className={`${styles['accordion__container']} ${styles['accordion__container_active']}`}>\n                <div onClick={() => onToggleDropdowns(index)} className={`${styles['accordion__header']} ${dropdownOpened.includes(index) ? styles['accordion__header_active'] : ''}`}>\n                    <h3 className={styles['accordion__title']}>{title}</h3>\n                    <div\n                        className={`${styles['accordion__icon']} ${dropdownOpened.includes(index) ? styles[\"accordion__icon_active\"] : ''}`}>\n                        <span className={`${styles[\"accordion__iconItem\"]} ${styles['accordion__iconItem_horizontal']}`}></span>\n                        <span className={`${styles[\"accordion__iconItem\"]} ${styles[\"accordion__iconItem_vertical\"]}`}></span>\n                    </div>\n                </div>\n\n                <DropdownProvider\n                    className={styles['accordion__contentTextWrapper']}\n                    inProp={dropdownOpened.includes(index)}\n                    childClass={`${styles['accordion__contentText']} contentTextDef`}\n                >\n                    {contentText}\n                </DropdownProvider>\n            </div>\n        </div>\n    )\n}\nexport default Accordion","import React, {useEffect, useRef, useState} from 'react';\n\nfunction DropdownProvider({inProp, duration, children, className, delay,childClass,minHeight,addHeight = 0}) {\n    const [contentHeight, setContentHeight] = useState(0)\n    const contentRef = useRef(null)\n\n    const durationTime = duration || 500\n    const delayState = delay || 0\n\n\n    useEffect(() => {\n        changeHeight()\n        window.addEventListener('resize', changeHeight)\n\n        return () => {\n            window.removeEventListener('resize', changeHeight)\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [inProp])\n\n    const changeHeight = () => setContentHeight((inProp && !minHeight) || (inProp && contentRef.current?.clientHeight < minHeight) ? contentRef.current?.clientHeight : 0)\n\n\n    const contentStyle = {\n        height: `${contentHeight + addHeight}px`,\n        transition: `height ${durationTime}ms ${delayState}ms`\n    }\n    return (\n        <div style={contentStyle} className={className ? className : ''}>\n            <div ref={contentRef} className={childClass ? childClass : ''}>\n                {children}\n            </div>\n        </div>\n    );\n}\n\nexport default DropdownProvider;"],"names":["title","contentText","index","addHeight","useState","dropdownOpened","setDropdownOpened","className","styles","onClick","id","includes","prevState","filter","item","DropdownProvider","inProp","childClass","duration","children","delay","minHeight","contentHeight","setContentHeight","contentRef","useRef","durationTime","delayState","useEffect","changeHeight","window","addEventListener","removeEventListener","current","clientHeight","contentStyle","height","transition","style","ref"],"sourceRoot":""}