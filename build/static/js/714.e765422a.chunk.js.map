{"version":3,"file":"static/js/714.e765422a.chunk.js","mappings":"mKACA,EAAgC,qCAAhC,EAA4F,4CAA5F,EAA6J,0CAA7J,EAAiO,+CAAjO,EAA6S,kDAA7S,EAAkY,wDAAlY,EAA+d,0DAA/d,EAA8jB,0DAA9jB,EAA0pB,uDAA1pB,EAA2vB,+D,uCCyC3vB,MAnCA,SAAuB,GAA0B,IAAzBA,EAAS,EAATA,UAAUC,EAAW,EAAXA,YAC9B,GAAyCC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,SAAS,IAAtEC,EAAK,EAALA,MAAMC,EAAO,EAAPA,QAAQC,EAAgB,EAAhBA,iBACrB,GAAyCC,EAAAA,EAAAA,GAAa,CAClDC,MAAO,IACRC,EAAAA,GAAmBL,GAFfM,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAASC,EAAW,EAAXA,YAGpBC,GAAWC,EAAAA,EAAAA,MAMXC,EAAsB,OAALX,QAAK,IAALA,GAAAA,EAAOI,MAAa,OAALJ,QAAK,IAALA,OAAK,EAALA,EAAOI,MAAMQ,OAASZ,EAE5D,OACI,kBACIa,SARS,SAACC,GACdA,EAAEC,iBACFN,GAASV,EAAAA,EAAAA,IAAUO,EAASE,EAAYZ,GAC5C,EAMQD,UAAS,UAAKqB,EAAuB,YAAIrB,GAAa,IAAK,WAE3D,kBACIsB,KAAK,QACLV,SAAUA,EACVW,MAAOZ,EAASF,MAChBe,KAAK,OACLxB,UAAWqB,EACXI,YAAY,8BAEhB,mBAAQC,SAAUpB,EAASkB,KAAK,SAASxB,UAAS,UAAKqB,EAA4B,YAAIpB,EAAcoB,EAAoC,IAAK,SAAC,eAC3I,cAAGrB,UAAS,UAAKqB,EAAoC,YAAIA,EAA0C,YAAIhB,IAAUJ,EAAcoB,EAA+C,IAAK,SAAEhB,GAASA,EAAMI,MAAQO,EAAiB,MAC7N,cAAGhB,UAAS,UAAKqB,EAAoC,YAAIA,EAA4C,YAAId,EAAmBc,EAA+C,IAAK,SAAC,uBAEjL,cAAGrB,UAAS,UAAKqB,EAAyC,YAAIhB,GAASJ,EAAcoB,EAAoD,IAAK,SAAEhB,GAASA,EAAMI,MAAQO,EAAiB,OAGxM,C,sGCvCA,GAAgB,wBAA0B,gDAAgD,qBAAuB,6CAA6C,yBAA2B,iDAAiD,0BAA4B,kDAAkD,2BAA6B,mDAAmD,6BAA+B,qDAAqD,0BAA4B,kDAAkD,+BAAiC,uDAAuD,6BAA+B,qDAAqD,6BAA+B,qDAAqD,kCAAoC,0DAA0D,SAAW,iCAAiC,YAAc,oCAAoC,mCAAqC,2DAA2D,0BAA4B,kDAAkD,0BAA4B,kDAAkD,0BAA4B,kDAAkD,4BAA8B,oDAAoD,0BAA4B,kDAAkD,yBAA2B,iDAAiD,2BAA6B,mDAAmD,gCAAkC,yD,mGCgG9oD,MAjFA,WACI,IAAMF,GAAWC,EAAAA,EAAAA,MACjB,GAAkCb,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,SAAS,IAA/DG,EAAgB,EAAhBA,iBAAkBF,EAAK,EAALA,MAClBsB,GAAwBzB,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMyB,EAAE,IAArDD,qBAEDE,GAAsBC,EAAAA,EAAAA,cAAY,WACpChB,GAASiB,EAAAA,EAAAA,IAAqB,IAC1BxB,GAAkBO,GAASkB,EAAAA,EAAAA,OAC3B3B,GAAOS,GAASmB,EAAAA,EAAAA,MAExB,GAAE,IAEF,OACI,iCACI,SAACC,EAAA,EAAQ,CACLC,OAAQR,EACRS,QAASP,EACTQ,YAAY,KAEhB,SAACC,EAAA,EAAiB,WACd,UAACC,EAAA,EAAkB,CACfJ,OAAQR,EAERa,MAAO,UACPxC,UAAWqB,EAAAA,wBAAkC,WAE7C,iBAAKrB,UAAWqB,EAAAA,qBAA+B,WAC3C,mBAAQrB,UAAWqB,EAAAA,yBAAoCoB,QAASZ,EAAoB,UAChF,SAACa,EAAA,EAAG,CAAC1C,UAAWqB,EAAAA,0BAAqCsB,GAAIC,EAAAA,QAE7D,iBAAK5C,UAAWqB,EAAAA,2BAAqC,WACjD,gBAAKwB,IAAKC,EAAAA,IAAoBC,IAAI,QAC7B/C,UAAWqB,EAAAA,gCAChB,gBAAKrB,UAAWqB,EAAAA,0BAAoC,UAChD,iBAAKrB,UAAWqB,EAAAA,+BAAyC,WACrD,gBAAKwB,IAAKG,EAAAA,IAAoBD,IAAI,QAC7B/C,UAAWqB,EAAAA,gCAChB,gBAAKwB,IAAKI,EAAAA,IAAoBF,IAAI,QAC7B/C,UAAS,UAAKqB,EAAAA,6BAAsC,YAAIA,EAAAA,sCAC7D,gBAAKwB,IAAKI,EAAAA,IAAoBF,IAAI,QAC7B/C,UAAS,UAAKqB,EAAAA,6BAAsC,YAAIA,EAAAA,+CAIzE,iBAAKrB,UAAWqB,EAAAA,0BAAoC,WAChD,UAACkB,EAAA,EACG,CACAC,MAAO,UACPL,QAAS5B,EACTP,UAAWqB,EAAAA,0BAAoC,WAE/C,eAAIrB,UAAWqB,EAAAA,0BAAoC,SAAC,wEACpD,cAAGrB,UAAWqB,EAAAA,4BAAsC,SAAC,sGAIrD,SAAC6B,EAAA,EAAa,CACVjD,aAAa,EACbD,UAAWqB,EAAAA,gCAGnB,UAACkB,EAAA,EAAkB,CACfJ,OAAQ5B,EAERiC,MAAO,UACPxC,UAAWqB,EAAAA,2BAAqC,WAEhD,eAAIrB,UAAWqB,EAAAA,gCAA0C,SAAC,2BAC1D,SAAC8B,EAAA,EAAO,CAACV,QAASZ,EACT7B,UAAWqB,EAAAA,8BAAwC,SAAC,oBAKzE,SAAC6B,EAAA,EAAa,CAACjD,aAAa,EAAMD,UAAWqB,EAAAA,kCAKjE,C,6GC5Fab,EAAe,SAAC4C,EAAaC,EAAUhD,GAChD,IAAMS,GAAWC,EAAAA,EAAAA,MACjB,GAAgCuC,EAAAA,EAAAA,UAASF,GAAY,eAA9CzC,EAAQ,KAAE4C,EAAW,KAEtB3C,EAAW,SAAAO,GACboC,GAAY,SAAApD,GAAK,yBACVA,GAAK,cACPgB,EAAEqC,OAAOlC,KAAOH,EAAEqC,OAAOjC,OAAK,IAEnCkC,EAAgBtC,EAAEqC,OAAOlC,KAC7B,EACMmC,EAAkB,SAACC,GACjBL,GAAYhD,GAAc,OAALA,QAAK,IAALA,GAAAA,EAAQqD,IAC7B5C,EAASuC,GAAS,kBACXhD,GAAK,cACPqD,EAAY,QAGzB,EAcA,MAAO,CACH/C,SAAAA,EACAC,SAAAA,EACAC,YAPgB,WAChB0C,EAAYH,EAChB,EAMIG,YAAAA,EACAI,cAjBkB,SAAAxC,GACdA,EAAEqC,OAAOjC,MAAMqC,MAAM,YACrBzC,EAAEqC,OAAOjC,MAAQJ,EAAEqC,OAAOjC,MAAMsC,QAAQ,YAAa,IAErDjD,EAASO,EAEjB,EAYIsC,gBAAAA,EAER,C,4KCnCarD,EAAY,SAACO,EAASE,EAAYZ,GAAW,gDAAK,WAAOa,GAAQ,sEACjC,OAAzCA,EAAS,CAACU,KAAMsC,EAAAA,KAAyB,mBAGbC,EAAAA,EAAAA,IAAaC,EAAAA,GAAa,OAAQC,KAAKC,UAAUvD,IAAU,OAApE,OACfG,EAAS,CAACU,KAAM2C,EAAAA,KAEXlE,GACDmE,YAAW,WACPtD,EAASkB,KACTnB,GACJ,GAAG,KACN,gDAEDC,EAASJ,EAAiB,OAAC,EAAD,yBAAC,KAAK2D,UAC5BpE,GACAmE,YAAW,WACPvD,IACAC,EAASmB,IACb,GAAG,KACN,yDAER,mDAtByD,EAsBzD,EAEYD,EAAwB,WAAH,OAAS,SAAAlB,GACvCA,EAAS,CAACU,KAAM8C,EAAAA,IACpB,CAAC,EAEYrC,EAAsB,WAAH,OAAS,SAAAnB,GACrCA,EAAS,CAACU,KAAM+C,EAAAA,IACpB,CAAC,EAEY7D,EAAoB,SAAC8D,GAAO,OAAK,SAAA1D,GAC1CA,GAASuC,EAAAA,EAAAA,IAASmB,EAAQC,EAAAA,IAC9B,CAAC,C","sources":["webpack://khg_tec_website/./src/components/global/SubscribeForm/SubscribeForm.module.scss?d882","components/global/SubscribeForm/SubscribeForm.jsx","webpack://khg_tec_website/./src/components/global/SubscribePopup/SubscribePopup.module.scss?513f","components/global/SubscribePopup/SubscribePopup.jsx","hooks/useFormValue.js","redux/action/subscribe.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"subscribeForm\":\"SubscribeForm_subscribeForm__wg84M\",\"subscribeForm__input\":\"SubscribeForm_subscribeForm__input__oEtrz\",\"subscribeForm__btn\":\"SubscribeForm_subscribeForm__btn__K0xEz\",\"subscribeForm__popupBtn\":\"SubscribeForm_subscribeForm__popupBtn__6zyxK\",\"subscribeForm__messageText\":\"SubscribeForm_subscribeForm__messageText__ISt6Z\",\"subscribeForm__messageText_error\":\"SubscribeForm_subscribeForm__messageText_error__LIps9\",\"subscribeForm__messageText_success\":\"SubscribeForm_subscribeForm__messageText_success__jQ8pK\",\"subscribeForm__messageText_visible\":\"SubscribeForm_subscribeForm__messageText_visible__f1m8i\",\"subscribeForm__popupMessageText\":\"SubscribeForm_subscribeForm__popupMessageText__y6Ajc\",\"subscribeForm__popupMessageText_visible\":\"SubscribeForm_subscribeForm__popupMessageText_visible__idT5H\"};","import React from 'react';\n\nimport styles from \"./SubscribeForm.module.scss\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useFormValue} from \"../../../hooks/useFormValue\";\nimport {setSubscribeError, subscribe} from \"../../../redux/action/subscribe\";\n\nfunction SubscribeForm({className,isFromPopup}) {\n    const {error,loading,subscribeMessage} = useSelector(state => state.subscribe)\n    const {formData, onChange,onResetForm} = useFormValue({\n        email: '',\n    }, setSubscribeError, error)\n    const dispatch = useDispatch()\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        dispatch(subscribe(formData,onResetForm,isFromPopup))\n    }\n    const errorTextState = error?.email ? error?.email.join() : error\n\n    return (\n        <form\n            onSubmit={onSubmit}\n            className={`${styles[\"subscribeForm\"]} ${className || ''}`}\n        >\n            <input\n                name='email'\n                onChange={onChange}\n                value={formData.email}\n                type=\"text\"\n                className={styles[\"subscribeForm__input\"]}\n                placeholder='Enter your email address'\n            />\n            <button disabled={loading} type='submit' className={`${styles[\"subscribeForm__btn\"]} ${isFromPopup ? styles[\"subscribeForm__popupBtn\"] : ''}`}>Subscribe</button>\n                <p className={`${styles[\"subscribeForm__messageText\"]} ${styles[\"subscribeForm__messageText_error\"]} ${error && !isFromPopup ? styles[\"subscribeForm__messageText_visible\"] : ''}`}>{error && error.email ? errorTextState : ''}</p>\n                <p className={`${styles[\"subscribeForm__messageText\"]} ${styles[\"subscribeForm__messageText_success\"]} ${subscribeMessage ? styles[\"subscribeForm__messageText_visible\"] : ''}`}>Successfully\n                    sent</p>\n                <p className={`${styles[\"subscribeForm__popupMessageText\"]} ${error && isFromPopup ? styles[\"subscribeForm__popupMessageText_visible\"] : ''}`}>{error && error.email ? errorTextState : ''}</p>\n        </form>\n    );\n}\n\nexport default SubscribeForm;","// extracted by mini-css-extract-plugin\nexport default {\"subscribePopup__wrapper\":\"SubscribePopup_subscribePopup__wrapper__iVzK3\",\"subscribePopup__main\":\"SubscribePopup_subscribePopup__main__oDyL8\",\"subscribePopup__crossBtn\":\"SubscribePopup_subscribePopup__crossBtn__J34Et\",\"subscribePopup__crossIcon\":\"SubscribePopup_subscribePopup__crossIcon__jbnp3\",\"subscribePopup__robotBlock\":\"SubscribePopup_subscribePopup__robotBlock__wJLdT\",\"subscribePopup__robotHeadImg\":\"SubscribePopup_subscribePopup__robotHeadImg__KhgeK\",\"subscribePopup__robotBody\":\"SubscribePopup_subscribePopup__robotBody__8MP0R\",\"subscribePopup__robotBodyInner\":\"SubscribePopup_subscribePopup__robotBodyInner__0akr8\",\"subscribePopup__robotBodyImg\":\"SubscribePopup_subscribePopup__robotBodyImg__r+QUu\",\"subscribePopup__robotHandImg\":\"SubscribePopup_subscribePopup__robotHandImg__e--nb\",\"subscribePopup__robotHandImg_left\":\"SubscribePopup_subscribePopup__robotHandImg_left__nTGh2\",\"handMove\":\"SubscribePopup_handMove__Q90yd\",\"handMoveMob\":\"SubscribePopup_handMoveMob__RPMlB\",\"subscribePopup__robotHandImg_right\":\"SubscribePopup_subscribePopup__robotHandImg_right__PIPbb\",\"subscribePopup__textBlock\":\"SubscribePopup_subscribePopup__textBlock__A16Mr\",\"subscribePopup__formBlock\":\"SubscribePopup_subscribePopup__formBlock__gBWfn\",\"subscribePopup__titleText\":\"SubscribePopup_subscribePopup__titleText__EicN8\",\"subscribePopup__contentText\":\"SubscribePopup_subscribePopup__contentText__+voIh\",\"subscribePopup__form_desk\":\"SubscribePopup_subscribePopup__form_desk__VV+TZ\",\"subscribePopup__form_mob\":\"SubscribePopup_subscribePopup__form_mob__432+2\",\"subscribePopup__thankBlock\":\"SubscribePopup_subscribePopup__thankBlock__i4Rok\",\"subscribePopup__thankBlockTitle\":\"SubscribePopup_subscribePopup__thankBlockTitle__XXaj8\"};","import React, {useCallback} from 'react';\n\nimport Backdrop from \"../../layout/Backdrop/Backdrop\";\nimport {subscribeRobotBody, subscribeRobotHand, subscribeRobotHead} from \"../../../assets/images\";\n\nimport styles from \"./SubscribePopup.module.scss\"\nimport NewPortalProvider from \"../../../providers/NewPortalProvider\";\nimport SubscribeForm from \"../SubscribeForm/SubscribeForm\";\nimport {subscribePopupCross} from \"../../../assets/svg\";\nimport Svg from \"../../layout/Svg/Svg\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport MainBtn from \"../../layout/MainBtn/MainBtn\";\nimport TransitionProvider from \"../../../providers/TransitionProvider\";\nimport {toggleSubscribePopup} from \"../../../redux/action/UI\";\nimport {clearSubscribeError, clearSubscribeMessage} from \"../../../redux/action/subscribe\";\n\nfunction SubscribePopup() {\n    const dispatch = useDispatch()\n    const {subscribeMessage, error} = useSelector(state => state.subscribe)\n    const {subscribePopupOpened} = useSelector(state => state.UI)\n\n    const closeSubscribePopup = useCallback(() => {\n        dispatch(toggleSubscribePopup(false))\n        if (subscribeMessage) dispatch(clearSubscribeMessage())\n        if (error) dispatch(clearSubscribeError())\n        // eslint-disable-next-line\n    },[])\n\n    return (\n        <>\n            <Backdrop\n                inProp={subscribePopupOpened}\n                onClose={closeSubscribePopup}\n                highZIndex={true}\n            />\n            <NewPortalProvider>\n                <TransitionProvider\n                    inProp={subscribePopupOpened}\n                    // eslint-disable-next-line react/style-prop-object\n                    style={'opacity'}\n                    className={styles[\"subscribePopup__wrapper\"]}\n                >\n                    <div className={styles[\"subscribePopup__main\"]}>\n                        <button className={styles[\"subscribePopup__crossBtn\"]} onClick={closeSubscribePopup}>\n                            <Svg className={styles['subscribePopup__crossIcon']} id={subscribePopupCross}/>\n                        </button>\n                        <div className={styles[\"subscribePopup__robotBlock\"]}>\n                            <img src={subscribeRobotHead} alt=\"Robot\"\n                                 className={styles[\"subscribePopup__robotHeadImg\"]}/>\n                            <div className={styles[\"subscribePopup__robotBody\"]}>\n                                <div className={styles[\"subscribePopup__robotBodyInner\"]}>\n                                    <img src={subscribeRobotBody} alt=\"Robot\"\n                                         className={styles[\"subscribePopup__robotBodyImg\"]}/>\n                                    <img src={subscribeRobotHand} alt=\"Robot\"\n                                         className={`${styles[\"subscribePopup__robotHandImg\"]} ${styles[\"subscribePopup__robotHandImg_left\"]}`}/>\n                                    <img src={subscribeRobotHand} alt=\"Robot\"\n                                         className={`${styles[\"subscribePopup__robotHandImg\"]} ${styles[\"subscribePopup__robotHandImg_right\"]}`}/>\n                                </div>\n                            </div>\n                        </div>\n                        <div className={styles[\"subscribePopup__textBlock\"]}>\n                            <TransitionProvider\n                                // eslint-disable-next-line react/style-prop-object\n                                style={'opacity'}\n                                inProp={!subscribeMessage}\n                                className={styles[\"subscribePopup__formBlock\"]}\n                            >\n                                <h4 className={styles[\"subscribePopup__titleText\"]}>Hi there! I will send you my newsletter if you give me your email.</h4>\n                                <p className={styles[\"subscribePopup__contentText\"]}>\n\n                                    Subscribe now to receive tech news, job opportunities, and never miss out on the latest updates.\n                                </p>\n                                <SubscribeForm\n                                    isFromPopup={true}\n                                    className={styles[\"subscribePopup__form_desk\"]}\n                                />\n                            </TransitionProvider>\n                            <TransitionProvider\n                                inProp={subscribeMessage}\n                                // eslint-disable-next-line react/style-prop-object\n                                style={'opacity'}\n                                className={styles[\"subscribePopup__thankBlock\"]}\n                            >\n                                <h4 className={styles[\"subscribePopup__thankBlockTitle\"]}>Thanks for subscribe </h4>\n                                <MainBtn onClick={closeSubscribePopup}\n                                         className={styles[\"subscribePopup__thankBlockBtn\"]}>Close</MainBtn>\n                            </TransitionProvider>\n\n                        </div>\n                    </div>\n                    <SubscribeForm isFromPopup={true} className={styles[\"subscribePopup__form_mob\"]}/>\n                </TransitionProvider>\n            </NewPortalProvider>\n        </>\n    );\n}\n\nexport default SubscribePopup;","import {useState} from \"react\"\nimport {useDispatch} from \"react-redux\";\n\nexport const useFormValue = (initialData, setError, error) => {\n    const dispatch = useDispatch()\n    const [formData, setFormData] = useState(initialData);\n\n    const onChange = e => {\n        setFormData(state => ({\n            ...state,\n            [e.target.name]: e.target.value\n        }))\n        clearInputError(e.target.name)\n    }\n    const clearInputError = (inputName) => {\n        if (setError && error && error?.[inputName]) {\n            dispatch(setError({\n                ...error,\n                [inputName]: null\n            }))\n        }\n    }\n\n    const onPhoneChange = e => {\n        if (e.target.value.match(/[^0-9+]/g)) {\n            e.target.value = e.target.value.replace(/[^0-9+]+/g, \"\");\n        } else {\n            onChange(e)\n        }\n    }\n\n    const onResetForm = () => {\n        setFormData(initialData)\n    }\n\n    return {\n        formData,\n        onChange,\n        onResetForm,\n        setFormData,\n        onPhoneChange,\n        clearInputError,\n    }\n}\n","import {fetchRequest, setError, subscribeUrl} from \"./fetchTools\";\nimport {\n    CLEAR_SUBSCRIBE_ERROR,\n    CLEAR_SUBSCRIBE_MESSAGE, SUBSCRIBE_FAIL,\n    SUBSCRIBE_LOADING_START,\n    SUBSCRIBE_SUCCESS\n} from \"../types\";\n\nexport const subscribe = (formData,onResetForm,isFromPopup) => async (dispatch) => {\n    dispatch({type: SUBSCRIBE_LOADING_START})\n    try {\n        // eslint-disable-next-line no-unused-vars\n        const fetchData = await fetchRequest(subscribeUrl,'POST', JSON.stringify(formData))\n        dispatch({type: SUBSCRIBE_SUCCESS})\n\n        if (!isFromPopup){\n            setTimeout(() => {\n                dispatch(clearSubscribeMessage())\n                onResetForm()\n            }, 3000)\n        }\n    } catch (err) {\n        dispatch(setSubscribeError(err?.message))\n        if(!isFromPopup){\n            setTimeout(() => {\n                onResetForm()\n                dispatch(clearSubscribeError())\n            }, 3000)\n        }\n    }\n}\n\nexport const clearSubscribeMessage = () => dispatch => {\n    dispatch({type: CLEAR_SUBSCRIBE_MESSAGE})\n}\n\nexport const clearSubscribeError = () => dispatch => {\n    dispatch({type: CLEAR_SUBSCRIBE_ERROR})\n}\n\nexport const setSubscribeError = (payload) => dispatch => {\n    dispatch(setError(payload,SUBSCRIBE_FAIL))\n}"],"names":["className","isFromPopup","useSelector","state","subscribe","error","loading","subscribeMessage","useFormValue","email","setSubscribeError","formData","onChange","onResetForm","dispatch","useDispatch","errorTextState","join","onSubmit","e","preventDefault","styles","name","value","type","placeholder","disabled","subscribePopupOpened","UI","closeSubscribePopup","useCallback","toggleSubscribePopup","clearSubscribeMessage","clearSubscribeError","Backdrop","inProp","onClose","highZIndex","NewPortalProvider","TransitionProvider","style","onClick","Svg","id","subscribePopupCross","src","subscribeRobotHead","alt","subscribeRobotBody","subscribeRobotHand","SubscribeForm","MainBtn","initialData","setError","useState","setFormData","target","clearInputError","inputName","onPhoneChange","match","replace","SUBSCRIBE_LOADING_START","fetchRequest","subscribeUrl","JSON","stringify","SUBSCRIBE_SUCCESS","setTimeout","message","CLEAR_SUBSCRIBE_MESSAGE","CLEAR_SUBSCRIBE_ERROR","payload","SUBSCRIBE_FAIL"],"sourceRoot":""}